@page "/admin/report/profit"

@inject HttpClient HttpClient
@inject NavigationManager NavigationManager

<PageTitle>Profit Report</PageTitle>
<nav class="navbar navbar-expand-lg navbar-dark bg-dark fixed-top">
    <div class="container-fluid">
        <ul class="navbar-nav mr-auto">
            <li class="nav-item">
                <NavLink class="nav-link" href="/users">Utilizadores</NavLink>
            </li>
            <li class="nav-item">
                <NavLink class="nav-link" href="/admin/assets">Ativos</NavLink>
            </li>
            <li class="nav-item">
                <NavLink class="nav-link" href="/admin/deposits">Depósitos a prazo</NavLink>
            </li>
            <li class="nav-item">
                <NavLink class="nav-link" href="/admin/funds">Fundos de Investimento</NavLink>
            </li>
            <li class="nav-item">
                <NavLink class="nav-link" href="/admin/rented">Imóveis Arrendados</NavLink>
            </li>
        </ul>
        <ul class="navbar-nav ml-auto">
            <li class="nav-item">
                <NavLink class="nav-link" href="/login">Logout</NavLink>
            </li>
        </ul>
    </div>
</nav>

<div class="container">
    <div class="row">
        <div class="col">
            <h3 class="text-center">Relatório de lucros</h3>
            <form>
                <div class="form-group mb-3">
                    <label for="name">Start Date</label>
                    <input type="date" class="form-control" id="startDate" placeholder="Enter a date" @bind="startDate">
                </div>
                <div class="form-group mb-3">
                    <label for="investmentAmount">End Date</label>
                    <input type="date" class="form-control" id="endDate" placeholder="Enter a date" @bind="endDate">
                </div>
            </form>
            @if (assets != null)
            {
                <table class="table">
                    <thead>
                        <tr>
                            <th>Asset Type</th>
                            <th>Start Date</th>
                            <th>Duration in Months</th>
                            <th>Tax Percentage</th>
                            <th>Total Profit Before Tax</th>
                            <th>Total Profit After Tax</th>
                            <th>Average Monthly Profit Before Tax</th>
                            <th>Average Monthly Profit After Tax</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var asset in assets)
                        {
                            <tr>
                                <td>@asset.AssetType</td>
                                <td>@asset.StartDate</td>
                                <td>@asset.DurationInMonths</td>
                                <td>@asset.TaxPercentage%</td>
                                <td>@asset.TotalProfitBeforeTax</td>
                                <td>@asset.TotalProfitAfterTax</td>
                                <td>@asset.AverageMonthlyProfitBeforeTax</td>
                                <td>@asset.AverageMonthlyProfitAfterTax</td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <p>Select the desired dates and press the button...</p>
            }
        </div>
    </div>
</div>

<div class="fixed-bottom mb-3">
    <div class="d-flex justify-content-center">
        <button class="btn btn-primary" @onclick="GenerateReport">Profit Report</button>
    </div>
</div>

@code {
    private List<AssetTDO> assets;
    private string searchTerm;
    private int userId;
    private DateOnly startDate;
    private DateOnly endDate;

    public class AssetTDO
    {
        // AssetTDO properties
        public int AssetId { get; set; }
        public string AssetType { get; set; }
        public DateTime StartDate { get; set; }
        public int DurationInMonths { get; set; }
        public decimal TaxPercentage { get; set; }
        public decimal TotalProfitBeforeTax { get; set; }
        public decimal TotalProfitAfterTax { get; set; }
        public decimal AverageMonthlyProfitBeforeTax { get; set; }
        public decimal AverageMonthlyProfitAfterTax { get; set; }
    }

    protected override async Task OnInitializedAsync()
    {
    }

    private async Task LoadAssets()
    {
        try
        {
            var reportResponse = await HttpClient.GetAsync($"http://localhost:5052/api/Assets/report?startDate={startDate.ToString("yyyy-MM-dd")}&endDate={endDate.ToString("yyyy-MM-dd")}");
            if (reportResponse.IsSuccessStatusCode)
            {
                assets = await reportResponse.Content.ReadFromJsonAsync<List<AssetTDO>>();
            }
            else
            {
                Console.WriteLine($"Error: {reportResponse.StatusCode}");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
            assets = null;
        }
    }
    
    private async Task GenerateReport()
    {
        try
        {
            // Check if both start date and end date are selected
            if (startDate != null && endDate != null)
            {
                // Call the API to generate the report
                var reportResponse = await HttpClient.GetAsync($"http://localhost:5052/api/Assets/report?startDate={startDate.ToString("yyyy-MM-dd")}&endDate={endDate.ToString("yyyy-MM-dd")}");
                if (reportResponse.IsSuccessStatusCode)
                {
                    assets = await reportResponse.Content.ReadFromJsonAsync<List<AssetTDO>>();
                }
                else
                {
                    Console.WriteLine($"Error: {reportResponse.StatusCode}");
                }
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
            assets = null;
        }
    }
}
